{"ast":null,"code":"var _jsxFileName = \"/Users/kaylaortiz/Desktop/favlinks/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    /*\n            TODO - set initial state for link name and URL \n        */\n\n    this.handleChange = event => {\n      /*\n              TODO - Logic for changing state based on form changes\n          */\n      if (event.target.id === \"link\") this.setState({\n        linkName: event.target.value\n      }); // update the linkname in state\n      else this.setState({\n        url: event.target.value\n      });\n    };\n\n    this.onFormSubmit = event => {\n      // to prevent page reload on form submit\n      event.preventDefault();\n      /*\n              TODO - Logic for calling props to handle submission and setting state changes\n          */\n\n      let changes2Link = {\n        linkName: this.state.linkName,\n        url: this.state.url\n      };\n      this.props.addNew(changes2Link);\n      this.setState({\n        linkName: '',\n        url: ''\n      });\n    };\n\n    this.state = {\n      linkName: '',\n      url: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"link\",\n        children: \"Link Name : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"link\",\n        value: this.state.linkName,\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"URL : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        value: this.state.url,\n        onChange: event => this.handleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => this.onFormSubmit(e),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/kaylaortiz/Desktop/favlinks/src/components/Form.js"],"names":["React","Component","Form","constructor","props","handleChange","event","target","id","setState","linkName","value","url","onFormSubmit","preventDefault","changes2Link","state","addNew","render","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA;AACJ;AACA;;AALqB,SAgBnBC,YAhBmB,GAgBHC,KAAD,IAAW;AACxB;AACJ;AACA;AACY,UAAGA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoB,MAAvB,EAEA,KAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEJ,KAAK,CAACC,MAAN,CAAaI;AAAzB,OAAd,EAFA,CAEgD;AAFhD,WAMA,KAAKF,QAAL,CAAc;AAAEG,QAAAA,GAAG,EAAEN,KAAK,CAACC,MAAN,CAAaI;AAApB,OAAd;AACT,KA3BkB;;AAAA,SA6BnBE,YA7BmB,GA6BHP,KAAD,IAAW;AACxB;AACAA,MAAAA,KAAK,CAACQ,cAAN;AAEA;AACJ;AACA;;AACY,UAAIC,YAAY,GAAG;AAACL,QAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWN,QAAtB;AAAgCE,QAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWJ;AAAhD,OAAnB;AAEA,WAAKR,KAAL,CAAWa,MAAX,CAAkBF,YAAlB;AAEA,WAAKN,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBE,QAAAA,GAAG,EAAE;AAArB,OAAd;AACT,KAzCkB;;AAOT,SAAKI,KAAL,GAAa;AAEXN,MAAAA,QAAQ,EAAE,EAFC;AAIXE,MAAAA,GAAG,EAAE;AAJM,KAAb;AAOT;;AA6BDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIN;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWN,QAA/C;AAAyD,QAAA,QAAQ,EAAGJ,KAAD,IAAU,KAAKD,YAAL,CAAkBC,KAAlB;AAA7E;AAAA;AAAA;AAAA;AAAA,cAJM,eAKN;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALM,eAON;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,KAAtB;AAA4B,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWJ,GAA9C;AAAmD,QAAA,QAAQ,EAAGN,KAAD,IAAU,KAAKD,YAAL,CAAkBC,KAAlB;AAAvE;AAAA;AAAA;AAAA;AAAA,cAPM,eASN;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAGa,CAAD,IAAK,KAAKN,YAAL,CAAkBM,CAAlB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATM;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA5D0B;;AA+D7B,eAAejB,IAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Form extends Component {\n  constructor(props) {\n    super(props)\n\n    /*\n            TODO - set initial state for link name and URL \n        */\n\n            this.state = {\n\n              linkName: '',\n  \n              url: ''\n  \n          }\n  }\n\n  handleChange = (event) => {\n    /*\n            TODO - Logic for changing state based on form changes\n        */\n            if(event.target.id === \"link\")\n\n            this.setState({ linkName: event.target.value}); // update the linkname in state\n\n        else\n\n            this.setState({ url: event.target.value});    \n  }\n\n  onFormSubmit = (event) => {\n    // to prevent page reload on form submit\n    event.preventDefault()\n\n    /*\n            TODO - Logic for calling props to handle submission and setting state changes\n        */\n            let changes2Link = {linkName: this.state.linkName, url: this.state.url};\n\n            this.props.addNew(changes2Link);\n    \n            this.setState({ linkName: '', url: ''}); \n  }\n\n  render() {\n    return (\n      <form>\n        {/* TODO - Logic for returning a form element with labels and inputs for link name and URL */}\n        <label htmlFor=\"link\">Link Name : </label>\n\n<input type=\"text\" id=\"link\" value={this.state.linkName} onChange={(event) =>this.handleChange(event)}/>   \n<label htmlFor=\"url\">URL : </label>\n\n<input type=\"text\" id=\"url\" value={this.state.url} onChange={(event) =>this.handleChange(event)}/>\n\n<button type=\"submit\" onClick={(e)=>this.onFormSubmit(e)}>Submit</button>                    \n      \n      \n      </form>\n    )\n  }\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}